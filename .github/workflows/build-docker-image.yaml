name: Build image and push (Node.js images)

on:
  workflow_call:
    inputs:
      service:
        type: string
        required: true
      release:
        type: boolean
        required: true
      version:
        type: string
        required: true

jobs:
  runs-on: ubuntu-latest
  env:
    VERSION: ${{ github.events.inputs.release ? ${{ github.events.inputs.version }} : "${{ github.events.inputs.version }}-${{ github.event.repository.updated_at}}" }}
  steps:
    -name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - uses: actions/checkout@v2
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Tag, and push image to Amazon ECR
      run: |
        DOCKER_BUILDKIT=1 docker build \
          --cache-from $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --progress plain \
          --build-arg BUILDKIT_INLINE_CACHE=1 \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION \
          --target release .

        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
